name: 📊 Technical Debt Monitoring

on:
  # 定期実行のみ（PRチェックはcode-quality.ymlに統合）
  schedule:
    # 毎日AM 10:00 (UTC) に実行
    - cron: '0 10 * * *'
  workflow_dispatch:
    inputs:
      full_analysis:
        description: 'Run full technical debt analysis'
        required: false
        default: 'true'
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  tech-debt-analysis:
    name: 🔍 Technical Debt Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup ESLint plugins
        run: npm run eslint:setup

      - name: 📊 Generate technical debt report
        id: debt-analysis
        run: |
          mkdir -p reports
          npm run debt:report > debt-analysis-output.txt 2>&1
          echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 📄 Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: technical-debt-reports
          path: |
            reports/
            debt-analysis-output.txt
          retention-days: 30

      - name: 📈 Extract metrics for PR comment
        if: github.event_name == 'pull_request'
        id: extract-metrics
        run: |
          if [ -f "reports/tech-debt.json" ]; then
            echo "report_exists=true" >> $GITHUB_OUTPUT
            
            # JSONから主要メトリクスを抽出
            TOTAL_ERRORS=$(jq -r '.summary.totalErrors' reports/tech-debt.json)
            TOTAL_WARNINGS=$(jq -r '.summary.totalWarnings' reports/tech-debt.json)
            THEME_VIOLATIONS=$(jq -r '.summary.themeViolations' reports/tech-debt.json)
            COMPLIANCE_ISSUES=$(jq -r '.summary.complianceIssues' reports/tech-debt.json)
            OVERALL_SCORE=$(jq -r '.summary.overallScore' reports/tech-debt.json)
            
            echo "total_errors=$TOTAL_ERRORS" >> $GITHUB_OUTPUT
            echo "total_warnings=$TOTAL_WARNINGS" >> $GITHUB_OUTPUT
            echo "theme_violations=$THEME_VIOLATIONS" >> $GITHUB_OUTPUT
            echo "compliance_issues=$COMPLIANCE_ISSUES" >> $GITHUB_OUTPUT
            echo "overall_score=$OVERALL_SCORE" >> $GITHUB_OUTPUT
          else
            echo "report_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: 💬 Comment PR with technical debt analysis
        if: github.event_name == 'pull_request' && steps.extract-metrics.outputs.report_exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const totalErrors = ${{ steps.extract-metrics.outputs.total_errors }};
            const totalWarnings = ${{ steps.extract-metrics.outputs.total_warnings }};
            const themeViolations = ${{ steps.extract-metrics.outputs.theme_violations }};
            const complianceIssues = ${{ steps.extract-metrics.outputs.compliance_issues }};
            const overallScore = ${{ steps.extract-metrics.outputs.overall_score }};
            
            // スコアに基づく評価
            let scoreEmoji = '🔴';
            let scoreColor = 'red';
            if (overallScore >= 80) {
              scoreEmoji = '🟢';
              scoreColor = 'brightgreen';
            } else if (overallScore >= 60) {
              scoreEmoji = '🟡';
              scoreColor = 'yellow';
            }
            
            const comment = `## 📊 Technical Debt Analysis Results
            
            ### 🏥 Overall Health Score: ${scoreEmoji} ${overallScore}/100
            
            ![Score](https://img.shields.io/badge/Score-${overallScore}%2F100-${scoreColor})
            
            ### 📈 Detailed Metrics
            
            | Category | Count | Status |
            |----------|-------|--------|
            | 🔴 **ESLint Errors** | ${totalErrors} | ${totalErrors === 0 ? '✅ Good' : '⚠️ Needs Attention'} |
            | 🟡 **ESLint Warnings** | ${totalWarnings} | ${totalWarnings < 10 ? '✅ Good' : totalWarnings < 50 ? '⚠️ Moderate' : '🔴 High'} |
            | 🎨 **Theme Violations** | ${themeViolations} | ${themeViolations === 0 ? '✅ Perfect' : themeViolations < 5 ? '⚠️ Minor' : '🔴 Major'} |
            | 🔒 **Compliance Issues** | ${complianceIssues} | ${complianceIssues === 0 ? '✅ Compliant' : '🔴 Critical'} |
            
            ### 💡 Quick Actions
            
            ${totalErrors > 0 ? '- 🔴 **Priority:** Fix ESLint errors before merging' : ''}
            ${complianceIssues > 0 ? '- 🔒 **Critical:** Address compliance issues immediately' : ''}
            ${themeViolations > 10 ? '- 🎨 **Recommended:** Review theme system usage' : ''}
            ${totalWarnings > 20 ? '- 🟡 **Suggested:** Consider addressing high warning count' : ''}
            
            ### 🔗 Resources
            
            - 📊 [Full Technical Debt Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - 🛠️ Run locally: \`npm run debt:analyze\`
            - 📋 TODO Analysis: \`npm run todo:check\`
            
            ---
            
            ${overallScore >= 80 ? '🎉 **Excellent code quality!** Keep up the great work!' : 
              overallScore >= 60 ? '👍 **Good code quality** with room for improvement.' : 
              '⚠️ **Code quality needs attention.** Please review the issues above.'}
            `;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('📊 Technical Debt Analysis Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: ❌ Fail if critical issues found
        if: steps.extract-metrics.outputs.total_errors > 0 || steps.extract-metrics.outputs.compliance_issues > 0
        run: |
          echo "❌ Critical technical debt issues found!"
          echo "ESLint Errors: ${{ steps.extract-metrics.outputs.total_errors }}"
          echo "Compliance Issues: ${{ steps.extract-metrics.outputs.compliance_issues }}"
          exit 1

  debt-dashboard-update:
    name: 📈 Update Debt Dashboard
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'
    needs: tech-debt-analysis
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup ESLint plugins
        run: npm run eslint:setup

      - name: 📊 Generate comprehensive report
        run: |
          mkdir -p reports
          npm run debt:analyze

      - name: 📈 Update trend data
        run: |
          # トレンドデータが存在する場合、分析
          if [ -f "reports/tech-debt-trends.json" ]; then
            echo "📈 Trend analysis available"
            
            # 最新と前回のスコア比較
            CURRENT_SCORE=$(jq -r '.entries[-1].overallScore' reports/tech-debt-trends.json)
            PREVIOUS_SCORE=$(jq -r '.entries[-2].overallScore // 0' reports/tech-debt-trends.json)
            
            echo "Current Score: $CURRENT_SCORE"
            echo "Previous Score: $PREVIOUS_SCORE"
            
            # スコア変化の計算
            if [ "$PREVIOUS_SCORE" != "0" ] && [ "$PREVIOUS_SCORE" != "null" ]; then
              SCORE_CHANGE=$(echo "$CURRENT_SCORE - $PREVIOUS_SCORE" | bc -l)
              echo "Score Change: $SCORE_CHANGE"
              
              # 大きな変化があった場合はアラート
              if (( $(echo "$SCORE_CHANGE < -10" | bc -l) )); then
                echo "🚨 Significant quality degradation detected!"
                echo "score_degradation=true" >> $GITHUB_ENV
              elif (( $(echo "$SCORE_CHANGE > 10" | bc -l) )); then
                echo "🎉 Significant quality improvement detected!"
                echo "score_improvement=true" >> $GITHUB_ENV
              fi
            fi
          fi

      - name: 🚨 Create quality degradation issue
        if: env.score_degradation == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Code Quality Degradation Alert - ${new Date().toISOString().split('T')[0]}`,
              body: `## 🚨 Code Quality Alert
              
              The technical debt monitoring system has detected a significant degradation in code quality.
              
              ### 📊 Details
              
              - **Detection Time:** ${new Date().toISOString()}
              - **Trigger:** Automated monitoring
              - **Severity:** High
              
              ### 🔍 Investigation Required
              
              Please review the latest technical debt report and identify the root cause of the quality degradation.
              
              ### 📋 Action Items
              
              - [ ] Review recent commits for quality issues
              - [ ] Check ESLint error trends
              - [ ] Verify compliance issues
              - [ ] Update development practices if needed
              
              ### 🔗 Resources
              
              - [Technical Debt Report](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              - [Quality Guidelines](./docs/QUALITY_GUIDELINES.md)
              
              ---
              
              🤖 This issue was automatically created by the Technical Debt Monitoring System.
              `,
              labels: ['technical-debt', 'quality', 'urgent', 'automated']
            });

      - name: 🎉 Celebrate quality improvement
        if: env.score_improvement == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // 品質改善をcelebrate（PRやissueにコメント、Slackへの通知など）
            console.log('🎉 Code quality has significantly improved!');

  historical-analysis:
    name: 📚 Historical Trend Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📊 Generate monthly summary
        run: |
          # 月次サマリーレポートの生成
          echo "📊 Generating monthly technical debt summary..."
          
          # 今後実装: 月次レポート生成機能
          echo "Monthly summary generation - Coming soon"

      - name: 📈 Commit trend data
        if: github.event_name == 'schedule'
        run: |
          # トレンドデータが更新された場合、コミット
          if [ -f "reports/tech-debt-trends.json" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            
            # 変更があるかチェック
            if ! git diff --quiet reports/tech-debt-trends.json; then
              git add reports/tech-debt-trends.json
              git commit -m "📊 Update technical debt trends data [skip ci]"
              git push
            fi
          fi