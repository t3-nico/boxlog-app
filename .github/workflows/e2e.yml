name: 🌐 E2E Browser Tests

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [main, dev]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

# 同じブランチで複数実行された場合、古い実行をキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # =====================================
  # 🌐 ブラウザ互換性テスト
  # =====================================
  e2e-tests:
    name: 🧪 E2E - ${{ matrix.project }}
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        project:
          - chromium
          - firefox
          - webkit
          - 'Mobile Chrome'
          - 'Mobile Safari'
          - iPad

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.project == 'Mobile Chrome' && 'chromium' || matrix.project == 'Mobile Safari' && 'webkit' || matrix.project == 'iPad' && 'webkit' || matrix.project }}

      - name: 🌐 Run E2E tests - ${{ matrix.project }}
        run: npm run test:e2e -- --project="${{ matrix.project }}"
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'dummy_url' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'dummy_key' }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}

      - name: 📊 Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report/
          retention-days: 7

      - name: 📸 Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.project }}
          path: test-results/
          retention-days: 7

  # =====================================
  # 🚪 E2E Quality Gate
  # =====================================
  e2e-quality-gate:
    name: 🚪 E2E Quality Gate
    runs-on: ubuntu-latest
    needs: [e2e-tests]
    if: always()

    steps:
      - name: ✅ Check E2E Results
        run: |
          if [[ "${{ needs.e2e-tests.result }}" != "success" ]]; then
            echo "❌ E2E tests failed"
            exit 1
          fi
          echo "✅ All E2E tests passed!"

      - name: 💬 PR Summary Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const getEmoji = (result) => {
              if (result === 'success') return '✅';
              if (result === 'failure') return '❌';
              return '⚠️';
            };

            const comment = `## 🌐 E2E Browser Tests Summary

            | Browser | Status |
            |---------|--------|
            | ${getEmoji('${{ needs.e2e-tests.result }}')} **All Browsers** | ${{ needs.e2e-tests.result }} |

            ### Tested Browsers
            - ✅ Chrome (Chromium)
            - ✅ Firefox
            - ✅ Safari (WebKit)
            - ✅ Mobile Chrome (Pixel 5)
            - ✅ Mobile Safari (iPhone 12)
            - ✅ iPad Pro

            ---

            ${(() => {
              const result = '${{ needs.e2e-tests.result }}';
              return result === 'success'
                ? '🎉 **All browser tests passed! Ready to merge.**'
                : '🔧 **Please fix browser compatibility issues.**';
            })()}

            <sub>🤖 BoxLog E2E Pipeline</sub>`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(c => c.body.includes('🌐 E2E Browser Tests Summary'));

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }
