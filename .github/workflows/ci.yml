name: 🚀 BoxLog CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CACHE_VERSION: v1

# 同じブランチで複数実行された場合、古い実行をキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# セキュリティ: 最小権限の原則（OWASP A01:2021対応）
permissions:
  contents: read          # コード読み取り
  pull-requests: write    # PRコメント投稿（Quality Gate）
  checks: write           # チェック結果の更新
  statuses: write         # ステータス更新
  issues: read            # Issue参照

jobs:
  # =====================================
  # 🚀 Phase 1: Quick Checks (並列実行 / 3分以内)
  # =====================================

  lint:
    name: 🔍 ESLint & Prettier
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🗂️ Cache ESLint
        uses: actions/cache@v4
        with:
          path: .eslint/cache
          key: eslint-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('src/**/*.{ts,tsx,js,jsx}') }}
          restore-keys: |
            eslint-${{ env.CACHE_VERSION }}-${{ runner.os }}-

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🎨 Check Prettier
        run: npx prettier --check "src/**/*.{ts,tsx,js,jsx,json,md}"

  typecheck:
    name: 🔤 TypeScript
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔤 Run TypeScript
        run: npm run typecheck

  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests with coverage
        run: npm run test:run -- --coverage

      - name: 📊 Upload coverage
        uses: codecov/codecov-action@79066c46f8dcdf8d7355f820dbac958c5b4cb9d3  # v4.5.0
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          fail_ci_if_error: false

  # i18n-check:
  #   name: 🌍 i18n Translation Check
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - name: 📥 Checkout
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

  #     - name: 🏗️ Setup Node.js
  #       uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'

  #     - name: 📦 Install dependencies
  #       run: npm ci

  #     - name: 🔍 Check translation integrity
  #       run: npm run test:i18n:integrity

  #     - name: ⚠️ Check hardcoded strings (warning)
  #       run: npm run test:i18n:hardcoded
  #       continue-on-error: true

  # =====================================
  # 🔍 Phase 2: Quality Checks (並列実行 / 5分以内)
  # =====================================

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    environment: development  # Environment Secrets保護
    needs: [lint, typecheck, unit-tests]
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🗂️ Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: nextjs-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx') }}
          restore-keys: |
            nextjs-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}-

      - name: 🏗️ Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBsYWNlaG9sZGVyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDUxOTI4MDAsImV4cCI6MTk2MDc2ODgwMH0.placeholder' }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}

  accessibility:
    name: ♿ Accessibility
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit-tests]
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 ESLint a11y check
        run: npm run a11y:check || echo "⚠️ Accessibility warnings found"
        continue-on-error: true

  heavy-checks:
    name: 🔍 Heavy Analysis
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit-tests]
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📜 License check
        run: npm run license:check
        continue-on-error: true

      - name: 🔄 API changes
        run: npm run api:check
        continue-on-error: true

      - name: 🏷️ Naming convention
        run: npm run naming:migrate
        continue-on-error: true

  performance:
    name: ⚡ Performance (Lighthouse CI)
    runs-on: ubuntu-latest
    environment: development  # Environment Secrets保護
    needs: [build]
    timeout-minutes: 15
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for Lighthouse
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBsYWNlaG9sZGVyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDUxOTI4MDAsImV4cCI6MTk2MDc2ODgwMH0.placeholder' }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}

      - name: ⚡ Run Lighthouse CI
        run: npm run perf:lighthouse
        continue-on-error: true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: 📊 Upload Lighthouse reports
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3  # v4.3.1
        if: always()
        with:
          name: lighthouse-reports-${{ github.sha }}
          path: .lighthouseci
          retention-days: 7

  docs-consistency:
    name: 📚 Docs Consistency
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit-tests]
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📚 Check docs
        run: npm run docs:check

  sentry-verification:
    name: 🔍 Sentry Integration
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 5
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11  # v4.1.1

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8  # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔗 Verify Sentry configuration
        run: npm run sentry:verify || echo "⚠️ Sentry not configured - skipping verification"
        continue-on-error: true
        env:
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

  # =====================================
  # 🚪 Phase 3: Quality Gate
  # =====================================

  quality-gate:
    name: 🚪 Quality Gate
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit-tests, build, performance, accessibility, heavy-checks, docs-consistency, sentry-verification]
    if: always()
    steps:
      - name: ✅ Check results
        run: |
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "❌ Lint failed"
            exit 1
          fi
          if [[ "${{ needs.typecheck.result }}" != "success" ]]; then
            echo "❌ TypeScript failed"
            exit 1
          fi
          if [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
            echo "❌ Tests failed"
            exit 1
          fi
          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "❌ Build failed"
            exit 1
          fi
          # Performance check is optional (Lighthouse CI has known issues)
          if [[ "${{ needs.performance.result }}" == "failure" ]]; then
            echo "⚠️  Performance check failed (non-blocking)"
          fi
          # Sentry is optional, skip check
          echo "✅ All critical checks passed!"

      - name: 💬 PR Summary Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd  # v8.0.0
        with:
          script: |
            const getEmoji = (result) => {
              if (result === 'success') return '✅';
              if (result === 'failure') return '❌';
              return '⚠️';
            };

            const comment = `## 🚪 Quality Gate Summary

            | Check | Status |
            |-------|--------|
            | ${getEmoji('${{ needs.lint.result }}')} **Lint** | ${{ needs.lint.result }} |
            | ${getEmoji('${{ needs.typecheck.result }}')} **TypeScript** | ${{ needs.typecheck.result }} |
            | ${getEmoji('${{ needs.unit-tests.result }}')} **Tests** | ${{ needs.unit-tests.result }} |
            | ${getEmoji('${{ needs.build.result }}')} **Build** | ${{ needs.build.result }} |
            | ${getEmoji('${{ needs.performance.result }}')} **Performance** | ${{ needs.performance.result }} |
            | ${getEmoji('${{ needs.accessibility.result }}')} **Accessibility** | ${{ needs.accessibility.result }} |
            | ${getEmoji('${{ needs.heavy-checks.result }}')} **Heavy Checks** | ${{ needs.heavy-checks.result }} |
            | ${getEmoji('${{ needs.docs-consistency.result }}')} **Docs** | ${{ needs.docs-consistency.result }} |

            ---

            ${(() => {
              const result = '${{ needs.quality-gate.result }}';
              return result === 'success'
                ? '🎉 **All checks passed! Ready to merge.**'
                : '🔧 **Please fix the issues above.**';
            })()}

            <sub>🤖 BoxLog CI/CD Pipeline</sub>`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.find(c => c.body.includes('🚪 Quality Gate Summary'));

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

  # =====================================
  # 🚀 Vercel自動デプロイ
  # =====================================
  #
  # GitHub Actions経由のデプロイは廃止しました。
  # Vercel GitHubインテグレーションが自動的にデプロイを実行します。
  #
  # 設定方法: docs/development/VERCEL_AUTO_DEPLOY.md を参照
  #
  # デプロイタイミング:
  # - main ブランチへのpush → 本番デプロイ
  # - PR作成 → プレビューデプロイ（自動生成）
  # - dev ブランチへのpush → プレビューデプロイ（optional）
