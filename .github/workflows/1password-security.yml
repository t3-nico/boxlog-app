name: 🔐 1Password Security Automation

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  schedule:
    # 毎日午前9時（JST）にセキュリティ監査実行
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      action:
        description: 'Security action to perform'
        required: true
        default: 'audit'
        type: choice
        options:
        - audit
        - compliance
        - cleanup
        - rotate

jobs:
  secrets-audit:
    name: 🔍 Secrets Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'audit')

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔐 Setup 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: 🔑 Authenticate with 1Password
        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_HOST }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
        run: |
          echo "$OP_CONNECT_TOKEN" | op signin --raw

      - name: 🔍 Run secrets audit
        run: npm run 1password:audit
        continue-on-error: true

      - name: 🧹 Detect unused secrets
        run: npm run 1password:cleanup
        continue-on-error: true

      - name: 📊 Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: secrets-audit-results
          path: |
            secrets-audit-*.json
            .boxlog-1password.log
          retention-days: 30

      - name: 💬 Comment audit results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const auditFiles = require('glob').sync('secrets-audit-*.json');

            if (auditFiles.length > 0) {
              const audit = JSON.parse(fs.readFileSync(auditFiles[0], 'utf8'));

              const body = `## 🔐 1Password Security Audit

              **Audit Timestamp:** ${audit.timestamp}
              **Environment:** ${audit.environment}

              ### 📊 Secrets Inventory
              - **Total Secrets:** ${audit.secrets.length}
              - **Vaults:** ${[...new Set(audit.secrets.map(s => s.vault))].join(', ')}

              ### 🔍 Security Status
              - **Recent Access Events:** ${audit.accessLog.length}
              - **Last Sync:** ${audit.timestamp}

              ${audit.secrets.length > 10 ? '⚠️ **High secret count detected** - Consider reviewing for unused secrets' : '✅ **Secret count within normal range**'}

              ---
              📖 **Documentation:** [1Password Setup Guide](./docs/setup/1PASSWORD_SETUP.md)
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }

  compliance-check:
    name: 📋 Security Compliance Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'compliance')

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔐 Setup 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: 🔑 Authenticate with 1Password
        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_HOST }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
        run: |
          echo "$OP_CONNECT_TOKEN" | op signin --raw

      - name: 📋 Generate compliance report
        run: npm run 1password:compliance

      - name: 📊 Analyze compliance score
        run: |
          COMPLIANCE_FILE=$(ls compliance-report-*.json | head -1)
          if [ -f "$COMPLIANCE_FILE" ]; then
            SCORE=$(cat "$COMPLIANCE_FILE" | jq -r '.score')
            echo "Compliance Score: $SCORE%"

            if [ "$SCORE" -lt 80 ]; then
              echo "❌ Compliance score ($SCORE%) below threshold (80%)"
              echo "COMPLIANCE_FAILED=true" >> $GITHUB_ENV
            else
              echo "✅ Compliance score ($SCORE%) meets requirements"
              echo "COMPLIANCE_PASSED=true" >> $GITHUB_ENV
            fi
          fi

      - name: 📊 Upload compliance report
        uses: actions/upload-artifact@v4
        with:
          name: compliance-report
          path: |
            compliance-report-*.json
            .boxlog-1password.log
          retention-days: 90

      - name: ❌ Fail on compliance issues
        if: env.COMPLIANCE_FAILED == 'true'
        run: |
          echo "Security compliance check failed. Please review the compliance report."
          exit 1

  secrets-rotation:
    name: 🔄 Secrets Rotation
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'rotate'
    environment: production

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔐 Setup 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: 🔑 Authenticate with 1Password
        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_HOST }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
        run: |
          echo "$OP_CONNECT_TOKEN" | op signin --raw

      - name: 🔄 Rotate secrets
        run: npm run 1password:rotate
        env:
          # 安全なrotation環境変数
          ROTATION_POLICY: "auto"
          BACKUP_BEFORE_ROTATION: "true"

      - name: 📊 Upload rotation report
        uses: actions/upload-artifact@v4
        with:
          name: secrets-rotation-report
          path: |
            secrets-rotation.log
            .boxlog-1password.log
          retention-days: 365

      - name: 📧 Notify rotation completion
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('secrets-rotation.log')) {
              const lastEntry = fs.readFileSync('secrets-rotation.log', 'utf8')
                .trim().split('\n').pop();
              const rotation = JSON.parse(lastEntry);

              console.log(`✅ Secrets rotation completed successfully`);
              console.log(`Summary: ${rotation.summary.successful}/${rotation.summary.total} secrets rotated`);

              // Slack/Teams通知やメール送信をここに追加可能
            }

  development-sync:
    name: 🔄 Development Environment Sync
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔐 Setup 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: 🔑 Authenticate with 1Password
        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_HOST }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
        run: |
          echo "$OP_CONNECT_TOKEN" | op signin --raw

      - name: 🔄 Sync development environment
        run: npm run 1password:sync

      - name: ✅ Verify sync success
        run: |
          if [ -f ".env.local" ]; then
            echo "✅ Environment sync completed"
            ENV_COUNT=$(grep -c "=" .env.local || true)
            echo "Environment variables synced: $ENV_COUNT"
          else
            echo "❌ Environment sync failed"
            exit 1
          fi

  security-monitoring:
    name: 🛡️ Continuous Security Monitoring
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Scan for hardcoded secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: 🔍 Check for 1Password references
        run: |
          # 1Password参照形式の検証
          if grep -r "op://" . --include="*.env*" --include="*.json" --include="*.yml" --include="*.yaml"; then
            echo "✅ Found 1Password references - secrets properly externalized"
          fi

          # 直接的なシークレット値の検出
          if grep -rE "(sk-[a-zA-Z0-9]{48}|[A-Za-z0-9]{64})" . --include="*.ts" --include="*.js" --include="*.tsx" --include="*.jsx" --exclude-dir=node_modules; then
            echo "❌ Potential hardcoded secrets detected"
            exit 1
          else
            echo "✅ No hardcoded secrets detected"
          fi

      - name: 📊 Generate security summary
        run: |
          cat << EOF > security-summary.md
          # 🔐 Security Monitoring Summary

          **Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Commit:** ${{ github.sha }}
          **Branch:** ${{ github.ref_name }}

          ## ✅ Security Checks Passed
          - TruffleHog secret scanning
          - 1Password reference validation
          - Hardcoded secret detection

          ## 📊 1Password Integration Status
          - Secrets properly externalized with op:// references
          - No hardcoded credentials detected
          - Development environment properly configured

          ---
          *Automated security monitoring by BoxLog CI/CD*
          EOF

      - name: 📊 Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30