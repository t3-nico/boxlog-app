name: 📦 Bundle Size Monitoring

on:
  pull_request:
    branches: [main, dev]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.*'
      - 'tailwind.config.*'
  push:
    branches: [main, dev]
    paths:
      - 'src/**'

env:
  NODE_VERSION: '18'

jobs:
  bundle-size-check:
    name: 🔍 Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup ESLint plugins
        run: npm run postinstall

      - name: 📏 Run bundle size check
        id: bundle-check
        run: |
          npm run bundle:check:verbose > bundle-check-output.txt 2>&1
          echo "exit_code=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 📊 Upload bundle check results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-check-results
          path: bundle-check-output.txt

      - name: 💬 Comment PR with bundle size
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const bundleOutput = fs.readFileSync('bundle-check-output.txt', 'utf8');
            
            const comment = `## 📦 Bundle Size Check Results
            
            \`\`\`
            ${bundleOutput}
            \`\`\`
            
            ${bundleOutput.includes('❌') ? '⚠️ **Bundle size limits exceeded!**' : '✅ **All bundle size checks passed!**'}
            
            ---
            🔗 [Bundle Analysis Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('📦 Bundle Size Check Results')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: ❌ Fail if bundle size exceeded
        if: steps.bundle-check.outputs.exit_code != '0'
        run: |
          echo "❌ Bundle size check failed!"
          exit 1

  bundle-analysis:
    name: 📊 Bundle Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup ESLint plugins
        run: npm run postinstall

      - name: 📊 Generate bundle analysis
        run: |
          ANALYZE=true npm run build 2>/dev/null || true
          
      - name: 📈 Upload bundle analysis
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            .next/analyze/
            .next/static/
          retention-days: 7

  bundle-comparison:
    name: 📈 Bundle Size Comparison
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout PR
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup ESLint plugins
        run: npm run postinstall

      - name: 📏 Get PR bundle size
        run: |
          npm run bundle:check > pr-bundle-size.txt 2>&1 || true
          
      - name: 📥 Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base-branch

      - name: 📦 Install base dependencies
        working-directory: base-branch
        run: npm ci

      - name: 🔧 Setup base ESLint plugins
        working-directory: base-branch
        run: npm run postinstall

      - name: 📏 Get base bundle size
        working-directory: base-branch
        run: |
          npm run bundle:check > ../base-bundle-size.txt 2>&1 || true

      - name: 📊 Compare bundle sizes
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let prBundleOutput = '';
            let baseBundleOutput = '';
            
            try {
              prBundleOutput = fs.readFileSync('pr-bundle-size.txt', 'utf8');
            } catch (e) {
              prBundleOutput = 'Failed to get PR bundle size';
            }
            
            try {
              baseBundleOutput = fs.readFileSync('base-bundle-size.txt', 'utf8');
            } catch (e) {
              baseBundleOutput = 'Failed to get base bundle size';
            }
            
            const comment = `## 📊 Bundle Size Comparison
            
            ### 🆕 This PR
            \`\`\`
            ${prBundleOutput}
            \`\`\`
            
            ### 📋 Base Branch (${context.payload.pull_request.base.ref})
            \`\`\`
            ${baseBundleOutput}
            \`\`\`
            
            ---
            💡 **Tips for bundle optimization:**
            - Use dynamic imports (\`React.lazy\`) for large components
            - Check for duplicate dependencies
            - Consider tree-shaking optimization
            - Use \`npm run bundle:analyze\` for detailed analysis
            `;
            
            // Find existing comparison comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('📊 Bundle Size Comparison')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }