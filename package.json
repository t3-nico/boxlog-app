{
  "name": "boxlog-app",
  "version": "0.0.1",
  "private": true,
  "sideEffects": [
    "*.css",
    "*.scss",
    "*.sass",
    "src/app/globals.css"
  ],
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "eslint . --max-warnings 20",
    "lint:fix": "eslint . --fix",
    "typecheck": "tsc --noEmit",
    "bundle:analyze": "ANALYZE=true npm run build",
    "bundle:check": "node scripts/bundle-check.js",
    "bundle:check:verbose": "node scripts/bundle-check.js --verbose",
    "bundle:monitor": "node scripts/bundle-monitor.js",
    "bundle:guard": "node scripts/bundle-size-guard.js",
    "bundle:create-baseline": "npm run build && node scripts/bundle-size-guard.js --create-baseline",
    "bundle:update-baseline": "npm run build && node scripts/bundle-size-guard.js --update-baseline",
    "bundle:full-check": "npm run bundle:check && npm run bundle:analyze && npm run bundle:monitor",
    "debt:report": "node scripts/tech-debt-report.js",
    "debt:json": "node scripts/tech-debt-report.js --json-only",
    "debt:analyze": "npm run lint:all && npm run debt:report",
    "eslint:setup": "node .eslint/scripts/setup.js",
    "setup:eslint-plugins": "node .eslint/scripts/setup.js",
    "postinstall": "echo 'ESLint setup temporarily disabled for deployment'",
    "dev:fallback": "next dev",
    "build:fallback": "next build",
    "start:fallback": "next start",
    "prepare": "husky",
    "issue:start": "node scripts/simple-issue-manager.js start",
    "issue:progress": "node scripts/simple-issue-manager.js progress",
    "issue:note": "node scripts/simple-issue-manager.js note",
    "issue:complete": "node scripts/simple-issue-manager.js complete",
    "issue:status": "node scripts/simple-issue-manager.js status",
    "log:feat": "git log --grep=\"^feat:\" --pretty=\"%s\"",
    "log:fix": "git log --grep=\"^fix:\" --pretty=\"%s\"",
    "log:type": "git log --pretty=\"%s\" | grep -E '^(feat|fix|docs|style|refactor|perf|test|chore):' | head -20",
    "env:setup": "cp .env.example .env",
    "env:check": "node scripts/env-validator.js",
    "env:validate": "npm run env:check",
    "env:info": "node scripts/env-info.js",
    "migration:create": "node scripts/migration-generator.js create",
    "migration:list": "node scripts/migration-generator.js list",
    "migration:status": "node scripts/migration-generator.js status",
    "error:analyze": "node scripts/error-analyzer.js analyze",
    "error:monitor": "node scripts/error-analyzer.js monitor",
    "error:report": "node scripts/error-analyzer.js report",
    "naming:migrate": "node scripts/naming-system-migration.js",
    "naming:migrate:apply": "node scripts/naming-system-migration.js --apply",
    "naming:analyze": "node scripts/naming-system-migration.js --verbose",
    "naming:test": "node scripts/naming-system-test.js",
    "generate:business-rules": "node scripts/business-rules-code-generator.js",
    "generate:validation": "npm run generate:business-rules -- --resources user,task,project,comment",
    "generate:types": "npm run generate:business-rules -- --resources user,task,project,comment --output ./src/types/generated",
    "generate:schemas": "npm run generate:business-rules -- --resources user,task,project,comment --tests",
    "generate:all": "npm run generate:business-rules -- --resources user,task,project,comment --tests --strict",
    "docs:check": "node scripts/docs-code-consistency.js",
    "docs:audit": "npm run docs:check",
    "docs:auto-fix": "node scripts/docs-auto-fix.js",
    "docs:fix-and-check": "npm run docs:auto-fix && npm run docs:check",
    "lint:a11y": "eslint . -c .eslint/index.js --ext .tsx,.ts | grep -E '(jsx-a11y|accessibility)'",
    "lint:a11y:fix": "eslint . -c .eslint/index.js --ext .tsx,.ts --fix | grep -E '(jsx-a11y|accessibility)'",
    "a11y:check": "npm run lint:a11y",
    "a11y:full": "npm run lint:a11y:fix",
    "license:check": "node scripts/license-checker.js",
    "license:check:force": "node scripts/license-checker.js --force",
    "license:audit": "npx license-checker --production --summary",
    "license:report": "npx license-checker --production --csv > license-report.csv",
    "api:check": "node scripts/api-change-detector.js",
    "api:check:force": "node scripts/api-change-detector.js --force",
    "api:analyze": "node scripts/api-change-detector.js --force",
    "perf:check": "node scripts/performance-regression-test.js",
    "perf:check:force": "node scripts/performance-regression-test.js --force",
    "perf:baseline": "node scripts/performance-regression-test.js --create-baseline",
    "perf:update-baseline": "node scripts/performance-regression-test.js --update-baseline",
    "quality:check": "npm run license:check && npm run api:check && npm run perf:check",
    "quality:check:force": "npm run license:check:force && npm run api:check:force && npm run perf:check:force",
    "quality:full": "npm run lint && npm run quality:check:force && npm run typecheck",
    "quality:report": "node scripts/quality-report.js",
    "quality:metrics": "node scripts/metrics-collector.js",
    "quality:analyze": "npm run quality:report",
    "quality:dashboard": "npm run quality:report && echo 'Dashboard at reports/quality/'",
    "improvement:suggest": "node scripts/improvement-suggester.js",
    "improvement:track": "node scripts/improvement-suggester.js --track-only",
    "improvement:full": "npm run quality:report && npm run improvement:suggest",
    "business-rules:test": "npm test src/config/business-rules.test.ts && npm test src/test/business-rules-integration.test.ts",
    "business-rules:generate-and-test": "npm run generate:business-rules && npm test src/generated/business-rules/tests/",
    "business-rules:full": "npm run business-rules:test && npm run business-rules:generate-and-test",
    "smart:dev": "node scripts/smart-run.js dev",
    "smart:build": "node scripts/smart-run.js build",
    "smart:start": "node scripts/smart-run.js start",
    "smart:report": "node scripts/smart-run.js report",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:coverage:check": "vitest run --coverage && node -e \"const fs = require('fs'); const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8')); const { lines, functions, branches, statements } = coverage.total; if (lines.pct < 80 || functions.pct < 80 || branches.pct < 80 || statements.pct < 80) { console.error('❌ Coverage below 80% threshold'); console.error('Lines:', lines.pct + '%', 'Functions:', functions.pct + '%', 'Branches:', branches.pct + '%', 'Statements:', statements.pct + '%'); process.exit(1); } else { console.log('✅ Coverage meets 80% threshold'); console.log('Lines:', lines.pct + '%', 'Functions:', functions.pct + '%', 'Branches:', branches.pct + '%', 'Statements:', statements.pct + '%'); }\"",
    "test:watch": "vitest --watch",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:quality": "npm run test:coverage:check && npm run test:e2e",
    "deploy:init": "node scripts/deploy-tracker.js init",
    "deploy:record": "node scripts/deploy-tracker.js record",
    "deploy:stats": "node scripts/deploy-tracker.js stats",
    "deploy:list": "node scripts/deploy-tracker.js list",
    "deploy:rollback": "node scripts/deploy-tracker.js rollback",
    "deploy:cleanup": "node scripts/deploy-tracker.js cleanup",
    "deploy:export": "node scripts/deploy-tracker.js export",
    "deploy:pre": "./scripts/deploy-hooks.sh pre-deploy",
    "deploy:post": "./scripts/deploy-hooks.sh post-deploy",
    "deploy:health": "curl -f ${VERCEL_URL:-${NEXT_PUBLIC_APP_URL:-http://localhost:3000}}/api/health || echo 'Health endpoint not available'",
    "deploy:full": "npm run deploy:pre && npm run build && npm run deploy:record && npm run deploy:post",
    "analytics:validate": "node scripts/analytics-validator.js validate",
    "analytics:report": "node scripts/analytics-validator.js report --json",
    "analytics:unused": "node scripts/analytics-validator.js unused",
    "analytics:stats": "node scripts/analytics-validator.js stats",
    "analytics:check": "npm run analytics:validate",
    "api:version:test": "node scripts/api-version-manager.js",
    "api:version:health": "node scripts/api-version-manager.js health",
    "api:version:versioning": "node scripts/api-version-manager.js version",
    "api:version:stats": "node scripts/api-version-manager.js stats",
    "api:version:cors": "node scripts/api-version-manager.js cors",
    "api:version:full": "node scripts/api-version-manager.js full-test",
    "config:validate": "node scripts/config-manager.js validate",
    "config:compare": "node scripts/config-manager.js compare",
    "error-patterns:test": "vitest run src/test/error-patterns-integration.test.ts",
    "error-patterns:health": "node -e \"const { getHealthStatus } = require('./dist/lib/error-handler'); console.log(JSON.stringify(getHealthStatus(), null, 2))\"",
    "error-patterns:stats": "node -e \"const { getErrorStats } = require('./dist/lib/error-handler'); console.log(JSON.stringify(getErrorStats(), null, 2))\"",
    "error-patterns:validate": "npm run typecheck && npm run error-patterns:test",
    "error-patterns:full": "npm run error-patterns:validate && npm run error-patterns:health && npm run error-patterns:stats",
    "config:docs": "node scripts/config-manager.js docs",
    "config:stats": "node scripts/config-manager.js stats",
    "config:check": "node scripts/config-manager.js",
    "config:full": "node scripts/config-manager.js full",
    "logs:analyze": "node scripts/log-analyzer.js analyze",
    "logs:alert": "node scripts/log-analyzer.js alert",
    "logs:watch": "node scripts/log-analyzer.js watch",
    "logs:report": "node scripts/log-analyzer.js analyze ./logs ./reports/log-analysis.json",
    "logs:csv": "node scripts/log-analyzer.js analyze ./logs ./reports/log-analysis.csv",
    "breaking:detect": "node scripts/breaking-changes-tracker.js detect",
    "breaking:record": "node scripts/breaking-changes-tracker.js record",
    "breaking:validate": "node scripts/breaking-changes-tracker.js validate",
    "breaking:init": "node scripts/breaking-changes-tracker.js init",
    "breaking:check": "node scripts/breaking-changes-tracker.js detect HEAD~1 HEAD",
    "breaking:analyze": "node scripts/breaking-changes-analyzer.js analyze",
    "breaking:impact": "node scripts/breaking-changes-analyzer.js analyze",
    "breaking:report": "node scripts/breaking-changes-analyzer.js report",
    "breaking:notify": "node scripts/breaking-changes-analyzer.js notify",
    "breaking:plan": "node scripts/breaking-changes-analyzer.js analyze --output-plan",
    "breaking:full": "npm run breaking:detect && npm run breaking:analyze && npm run breaking:record",
    "i18n:report": "node scripts/translation-manager.js report",
    "i18n:check": "node scripts/translation-manager.js check",
    "i18n:health": "node scripts/translation-manager.js health",
    "i18n:missing": "node scripts/translation-manager.js missing",
    "i18n:export": "node scripts/translation-manager.js export",
    "i18n:help": "node scripts/translation-manager.js help",
    "i18n:qa:evaluate": "node scripts/quality-assurance-cli-fixed.js evaluate",
    "i18n:qa:review": "node scripts/quality-assurance-cli-fixed.js review",
    "i18n:qa:report": "node scripts/quality-assurance-cli-fixed.js report",
    "i18n:qa:benchmark": "node scripts/quality-assurance-cli-fixed.js benchmark",
    "i18n:qa:help": "node scripts/quality-assurance-cli-fixed.js help",
    "i18n:platform:compare": "node scripts/translation-platform-selector.js compare",
    "i18n:platform:recommend": "node scripts/translation-platform-selector.js recommend",
    "i18n:platform:report": "node scripts/translation-platform-selector.js report",
    "i18n:platform:help": "node scripts/translation-platform-selector.js help",
    "i18n:crowdin:upload": "node scripts/crowdin-integration-cli.js upload",
    "i18n:crowdin:download": "node scripts/crowdin-integration-cli.js download",
    "i18n:crowdin:sync": "node scripts/crowdin-integration-cli.js sync",
    "i18n:crowdin:progress": "node scripts/crowdin-integration-cli.js progress",
    "i18n:crowdin:status": "node scripts/crowdin-integration-cli.js status",
    "i18n:crowdin:setup": "node scripts/crowdin-integration-cli.js setup",
    "i18n:crowdin:test": "node scripts/crowdin-integration-cli.js test",
    "i18n:crowdin:help": "node scripts/crowdin-integration-cli.js help",
    "sentry:test": "node scripts/sentry-connection-test.js",
    "sentry:check": "npm run sentry:test",
    "vercel:env": "node scripts/vercel-env-check.js",
    "vercel:check": "npm run vercel:env",
    "seed:test": "npm run typecheck && tsx seeds/scripts/seed.ts test",
    "seed:dev": "npm run typecheck && tsx seeds/scripts/seed.ts development",
    "seed:staging": "npm run typecheck && tsx seeds/scripts/seed.ts staging",
    "seed:minimal": "npm run typecheck && tsx seeds/scripts/seed.ts minimal",
    "seed:quick": "npm run typecheck && tsx seeds/scripts/quick-seed.ts"
  },
  "dependencies": {
    "@ai-sdk/openai": "^1.3.23",
    "@ai-sdk/react": "^2.0.58",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@headlessui/react": "^2.2.4",
    "@hello-pangea/dnd": "^18.0.1",
    "@hookform/resolvers": "^5.1.1",
    "@icons-pack/react-simple-icons": "^13.5.0",
    "@lexical/clipboard": "^0.35.0",
    "@lexical/code": "^0.35.0",
    "@lexical/history": "^0.35.0",
    "@lexical/html": "^0.35.0",
    "@lexical/link": "^0.35.0",
    "@lexical/list": "^0.35.0",
    "@lexical/markdown": "^0.35.0",
    "@lexical/plain-text": "^0.35.0",
    "@lexical/react": "^0.35.0",
    "@lexical/rich-text": "^0.35.0",
    "@lexical/utils": "^0.35.0",
    "@lexical/yjs": "^0.35.0",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@radix-ui/react-use-controllable-state": "^1.2.2",
    "@sentry/nextjs": "^10.15.0",
    "@shikijs/transformers": "^3.8.0",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.50.2",
    "@tanstack/react-query": "^5.90.2",
    "@tanstack/react-table": "^8.21.3",
    "@tiptap/extension-link": "^3.4.2",
    "@tiptap/extension-list-item": "^3.4.2",
    "@tiptap/extension-placeholder": "^3.0.7",
    "@tiptap/extension-task-item": "^3.4.2",
    "@tiptap/extension-task-list": "^3.4.2",
    "@tiptap/pm": "^3.0.7",
    "@tiptap/react": "^3.4.2",
    "@tiptap/starter-kit": "^3.4.2",
    "@trpc/client": "^11.6.0",
    "@trpc/next": "^11.6.0",
    "@trpc/react-query": "^11.6.0",
    "@trpc/server": "^11.6.0",
    "@types/dompurify": "^3.0.5",
    "@types/react-window": "^1.8.8",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "ai": "^5.0.54",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "color": "^5.0.0",
    "date-fns": "^4.1.0",
    "date-fns-tz": "^3.2.0",
    "dompurify": "^3.2.7",
    "dotenv": "^17.2.0",
    "framer-motion": "^11.18.2",
    "immer": "^10.1.3",
    "jotai": "^2.12.5",
    "lexical": "^0.35.0",
    "lucide-react": "^0.539.0",
    "motion": "^12.23.6",
    "next": "^14.2.33",
    "radix-ui": "^1.4.2",
    "react": "^18",
    "react-day-picker": "^9.8.0",
    "react-dnd": "^16.0.1",
    "react-dnd-html5-backend": "^16.0.1",
    "react-dom": "^18",
    "react-hook-form": "^7.60.0",
    "react-markdown": "^10.1.0",
    "react-window": "^1.8.11",
    "remark-gfm": "^4.0.1",
    "shiki": "^3.8.0",
    "superjson": "^2.2.2",
    "tailwind-merge": "^3.3.1",
    "tunnel-rat": "^0.1.2",
    "use-stick-to-bottom": "^1.1.1",
    "web-vitals": "^5.1.0",
    "zod": "^3.25.76",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@next/bundle-analyzer": "^15.5.3",
    "@playwright/test": "^1.48.0",
    "@tailwindcss/postcss": "^4.1.7",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/color": "^4.2.0",
    "@types/cookie": "^0.6.0",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@typescript-eslint/eslint-plugin": "^7.2.0",
    "@typescript-eslint/parser": "^7.2.0",
    "@vitejs/plugin-react": "^5.0.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint": "^8",
    "eslint-config-next": "14.2.3",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-unused-imports": "^4.2.0",
    "eslint-plugin-vitest": "^0.5.4",
    "happy-dom": "^19.0.2",
    "husky": "^9.1.7",
    "jsdom": "^27.0.0",
    "license-checker": "^25.0.1",
    "lightningcss": "^1.30.1",
    "lint-staged": "^16.1.6",
    "postcss": "^8",
    "prettier": "^3.3.2",
    "prettier-plugin-organize-imports": "^4.0.0",
    "prettier-plugin-tailwindcss": "^0.6.11",
    "supabase": "^2.30.4",
    "tailwindcss": "^4.1.7",
    "tsx": "^4.20.6",
    "tw-animate-css": "^1.3.6",
    "typescript": "^5",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "prettier --write",
      "eslint --cache --fix"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
